@model PointOfSaleProject.Models.ViewModel.ItemCategoryVM
@{
    ViewBag.Title = "Create";
}
<h2>Item Category Setup</h2>

@using (Html.BeginForm("Create","ItemCategory",FormMethod.Post,new{enctype= "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10" >
            <div class="row">
                <div class="col-md-2"></div>
                <div class="col-md-10">
                    <div class="form-group">
                        <label class="radio-inline">
                            <input type="radio" name="categoryRadio" id="parent" value="parent" checked="checked"> Parent Category
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="categoryRadio" id="child" value="child"> Child Category
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group row" id="parentGroup" style="display: none">
                @Html.LabelFor(model => model.ItemParentsID, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.ItemParentsID, Model.SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ItemParentsID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <input type="file" name="ItemCategoryFile" id="itemCategoryFile" />
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    <br />
                    <img src="" alt="" id="itemCategoryFilePreview" class="img-responsive" width="200" height="200" />
                </div>
            </div>

            
                <div class="col-md-8">
                    <input type="submit" value="Save" class="btn btn-success pull-right" />
                </div>
           
        </div>
    </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/POSScript/Image.js"></script>
    <script src="~/Scripts/POSScript/ShowAndHide.js"></script>
}
